#–ù–∞–ø–∏—à–∏—Ç–µ –ø—Ä–æ–≥—Ä–∞–º–º—É –∫–æ—Ç–æ—Ä–∞—è –±—É–¥–µ—Ç —Å–æ–±–∏—Ä–∞—Ç—å –¥–∞–Ω–Ω—ã–µ –æ –∫–ª–∏–µ–Ω—Ç–∞—Ö –±–∞–Ω–∫–∞ –∫—Ä–æ–≤–∏. –ß–µ–ª–æ–≤–µ–∫ –º–æ–∂–µ—Ç —Å–¥–∞–≤–∞—Ç—å –∫—Ä–æ–≤—å –Ω–µ —á–∞—â–µ —á–µ–º —Ä–∞–∑ –≤ –º–µ—Å—è—Ü, –∏ –Ω–µ –º–æ–∂–µ—Ç –∏–º–µ—Ç—å –Ω–µ–∫–æ—Ç–æ—Ä—ã–µ –∑–∞–±–æ–ª–µ–≤–∞–Ω–∏—è, –∏ –±—ã—Ç—å —Å—Ç–∞—Ä—à–µ 65 –ª–µ—Ç –∏ –º–ª–∞–¥—à–µ 12.
#1) –î–æ–±–∞–≤–ª—è—Ç—å –Ω–æ–≤–æ–≥–æ –∫–ª–∏–µ–Ω—Ç–∞.
#   –î–æ–ª–∂–Ω–æ –±—ã—Ç—å –æ—Ç–æ–±—Ä–∞–∂–µ–Ω–æ: 
#   –§–ò, –∫–æ–ª. –ø–æ–ª–Ω—ã—Ö –ª–µ—Ç, –≥—Ä—É–ø–ø–∞ –∫—Ä–æ–≤–∏, —Ä–µ–∑—É—Å —Ñ–∞–∫—Ç–æ—Ä, –Ω–∞–ª–∏—á–∏–µ –æ–≥—Ä–∞–Ω–∏—á–µ–Ω–∏–π, –∫–æ–ª. –¥–Ω–µ–π —Å –ø–æ—Å–ª–µ–¥–Ω–µ–π —Å–¥–∞—á–∏ –∫—Ä–æ–≤–∏(–µ—Å–ª–∏ —Å–¥–∞—ë—Ç–µ –≤ –ø–µ—Ä–≤—ã–π —Ä–∞–∑ –ø–æ—Å—Ç–∞–≤—å—Ç–µ -).
#2) –ü—Ä–∏–Ω–∏–º–∞—Ç—å –∑–∞—è–≤–∫—É –Ω–∞ —Å–¥–∞—á—É –∫—Ä–æ–≤–∏
#3) –£–¥–∞–ª—è—Ç—å –∫–ª–∏–µ–Ω—Ç–∞ –∏–∑ –±–∞–∑—ã –∏ –¥–æ–±–∞–≤–ª—è—Ç—å –≤ blacklist.
#4) –û—Ç–æ–±—Ä–∞–∂–∞—Ç—å –∑–∞–ø—Ä–æ—Å –Ω–∞ –∫–ª–∏–µ–Ω—Ç–∞.
#5) –í–Ω–æ—Å–∏—Ç—å –∏–∑–º–µ–Ω–µ–Ω–∏—è –ø–æ –∫–ª–∏–µ–Ω—Ç–∞–º.
#6) –í—ã–≤–æ–¥–∏—Ç—å blacklist, —Å–ø–∏—Å–æ–∫ –∑–∞—Ä–µ–≥–∏—Å—Ç—Ä–∏—Ä–æ–≤–∞–Ω–Ω—ã—Ö, –∏ —Å–ø–∏—Å–æ–∫ –æ–≥—Ä–∞–Ω–∏—á–µ–Ω–∏–π.

reglist = {1: {'–§–ò:': '–ú–∏—à–∏–Ω –ò–≥–æ—Ä—å', '–í–æ–∑—Ä–∞—Å—Ç:': 32, '–ì—Ä—É–ø–ø–∞ –∫—Ä–æ–≤–∏:': 3, '–†–µ–∑—É—Å —Ñ–∞–∫—Ç–æ—Ä:': '+', "–ü–æ—Å–ª–µ–¥–Ω—è—è —Å–¥–∞—á–∞ –∫—Ä–æ–≤–∏:": '19','–û–≥—Ä–∞–Ω–∏—á–µ–Ω–∏—è:': ['–ù–µ—Ç –æ–≥—Ä–∞–Ω–∏—á–µ–Ω–∏–π']},
           2: {'–§–ò:': "–°–µ—Ä–≥–µ–π –ú–∞–Ω–∂–æ—Å–æ–≤", "–í–æ–∑—Ä–∞—Å—Ç:": 16, "–ì—Ä—É–ø–ø–∞ –∫—Ä–æ–≤–∏:": 2, "–†–µ–∑—É—Å —Ñ–∞–∫—Ç–æ—Ä:": "+", "–ü–æ—Å–ª–µ–¥–Ω—è—è —Å–¥–∞—á–∞ –∫—Ä–æ–≤–∏:": '-1',"–û–≥—Ä–∞–Ω–∏—á–µ–Ω–∏—è:": ['–ù–µ—Ç –æ–≥—Ä–∞–Ω–∏—á–µ–Ω–∏–π']},
           3: {'–§–ò:': '–ï–≥–æ—Ä–æ–≤–∞ –ò—Ä–∏–Ω–∞', '–í–æ–∑—Ä–∞—Å—Ç:': 15, '–ì—Ä—É–ø–ø–∞ –∫—Ä–æ–≤–∏:': 1, '–†–µ–∑—É—Å —Ñ–∞–∫—Ç–æ—Ä:': '+', '–ü–æ—Å–ª–µ–¥–Ω—è—è —Å–¥–∞—á–∞ –∫—Ä–æ–≤–∏:': '-1', '–û–≥—Ä–∞–Ω–∏—á–µ–Ω–∏—è:': ['–ù–µ—Ç –æ–≥—Ä–∞–Ω–∏—á–µ–Ω–∏–π']},
           4: {'–§–ò:': '–í–ª–∞–¥–∏—Å–ª–∞–≤ –ï–Ω–∏–∫–µ–µ–≤', '–í–æ–∑—Ä–∞—Å—Ç:': 15, '–ì—Ä—É–ø–ø–∞ –∫—Ä–æ–≤–∏:': 2, '–†–µ–∑—É—Å —Ñ–∞–∫—Ç–æ—Ä:': '-', '–ü–æ—Å–ª–µ–¥–Ω—è—è —Å–¥–∞—á–∞ –∫—Ä–æ–≤–∏:': '35', '–û–≥—Ä–∞–Ω–∏—á–µ–Ω–∏—è:': ['–ù–µ—Ç –æ–≥—Ä–∞–Ω–∏—á–µ–Ω–∏–π']}}
blacklist = {1: {'–§–ò:': '–¢—Ä–æ—Ñ–∏–º–æ–≤ –í–ª–∞–¥–∏–º–∏—Ä', '–í–æ–∑—Ä–∞—Å—Ç:': 66, '–ì—Ä—É–ø–ø–∞ –∫—Ä–æ–≤–∏:': 3, '–†–µ–∑—É—Å —Ñ–∞–∫—Ç–æ—Ä:': '+', "–ü–æ—Å–ª–µ–¥–Ω—è—è —Å–¥–∞—á–∞ –∫—Ä–æ–≤–∏:": '75','–û–≥—Ä–∞–Ω–∏—á–µ–Ω–∏—è:': ['–ù–µ—Ç –æ–≥—Ä–∞–Ω–∏—á–µ–Ω–∏–π']}}
listall = {1: {'–§–ò:': '–ú–∏—à–∏–Ω –ò–≥–æ—Ä—å', '–í–æ–∑—Ä–∞—Å—Ç:': 32, '–ì—Ä—É–ø–ø–∞ –∫—Ä–æ–≤–∏:': 3, '–†–µ–∑—É—Å —Ñ–∞–∫—Ç–æ—Ä:': '+', "–ü–æ—Å–ª–µ–¥–Ω—è—è —Å–¥–∞—á–∞ –∫—Ä–æ–≤–∏:": '19','–û–≥—Ä–∞–Ω–∏—á–µ–Ω–∏—è:': ['–ù–µ—Ç –æ–≥—Ä–∞–Ω–∏—á–µ–Ω–∏–π']},
           2: {'–§–ò:': "–°–µ—Ä–≥–µ–π –ú–∞–Ω–∂–æ—Å–æ–≤", "–í–æ–∑—Ä–∞—Å—Ç:": 16, "–ì—Ä—É–ø–ø–∞ –∫—Ä–æ–≤–∏:": 2, "–†–µ–∑—É—Å —Ñ–∞–∫—Ç–æ—Ä:": "+", "–ü–æ—Å–ª–µ–¥–Ω—è—è —Å–¥–∞—á–∞ –∫—Ä–æ–≤–∏:": '-1',"–û–≥—Ä–∞–Ω–∏—á–µ–Ω–∏—è:": ['–ù–µ—Ç –æ–≥—Ä–∞–Ω–∏—á–µ–Ω–∏–π']},
           3: {'–§–ò:': '–ï–≥–æ—Ä–æ–≤–∞ –ò—Ä–∏–Ω–∞', '–í–æ–∑—Ä–∞—Å—Ç:': 15, '–ì—Ä—É–ø–ø–∞ –∫—Ä–æ–≤–∏:': 1, '–†–µ–∑—É—Å —Ñ–∞–∫—Ç–æ—Ä:': '+', '–ü–æ—Å–ª–µ–¥–Ω—è—è —Å–¥–∞—á–∞ –∫—Ä–æ–≤–∏:': '-1', '–û–≥—Ä–∞–Ω–∏—á–µ–Ω–∏—è:': ['–ù–µ—Ç –æ–≥—Ä–∞–Ω–∏—á–µ–Ω–∏–π']},
           4: {'–§–ò:': '–í–ª–∞–¥–∏—Å–ª–∞–≤ –ï–Ω–∏–∫–µ–µ–≤', '–í–æ–∑—Ä–∞—Å—Ç:': 15, '–ì—Ä—É–ø–ø–∞ –∫—Ä–æ–≤–∏:': 2, '–†–µ–∑—É—Å —Ñ–∞–∫—Ç–æ—Ä:': '-', '–ü–æ—Å–ª–µ–¥–Ω—è—è —Å–¥–∞—á–∞ –∫—Ä–æ–≤–∏:': '35', '–û–≥—Ä–∞–Ω–∏—á–µ–Ω–∏—è:': ['–ù–µ—Ç –æ–≥—Ä–∞–Ω–∏—á–µ–Ω–∏–π']}}
ogranichen = ['–ù–µ—Ç –æ–≥—Ä–∞–Ω–∏—á–µ–Ω–∏–π','–ì–∏–ø–æ—Ç–∏—Ç –ê', "–ì–∏–ø–æ—Ç–∏—Ç –ë", "–°–ø–∏–¥"]

def inzapros():
    spisok = ['1 - –∑–∞—Ä–µ–≥–∏—Å—Ç—Ä–∏—Ä–æ–≤–∞—Ç—å—Å—è', "2 - –ó–∞—è–≤–∫–∞ –Ω–∞ —Å–¥–∞—á—É –∫—Ä–æ–≤–∏", 
              "3 - –í—ã–≤–µ—Å—Ç–∏ —Å–ø–∏—Å–æ–∫ –æ–≥—Ä–∞–Ω–∏—á–µ–Ω–∏–π", "4 - –í—ã–≤–µ—Å—Ç–∏ —Å–ø–∏—Å–æ–∫ –∑–∞—Ä–µ–≥–∏—Å—Ç—Ä–∏—Ä–æ–≤–∞–Ω–Ω—ã—Ö", 
              "5 - –í—ã–≤–µ—Å—Ç–∏ –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –æ —á–µ–ª–æ–≤–µ–∫–µ", "6 - –†–µ–¥–∞–∫—Ç–∏—Ä–æ–≤–∞—Ç—å –∞–Ω–∫–µ—Ç—É"]
    for i in spisok:
        print(i)

def reg():
    global ogranichen, listall
    chelovek = {
        '–§–ò:': input('–í–≤–µ–¥–∏—Ç–µ –§–ò: '),
        "–í–æ–∑—Ä–∞—Å—Ç:": int(input('–í–≤–µ–¥–∏—Ç–µ –∫–æ–ª. –ø–æ–ª–Ω—ã—Ö –ª–µ—Ç: ')),
        "–ì—Ä—É–ø–ø–∞ –∫—Ä–æ–≤–∏:": int(input('–í–≤–µ–¥–∏—Ç–µ –≥—Ä—É–ø–ø—É –∫—Ä–æ–≤–∏: ')),
        "–†–µ–∑—É—Å —Ñ–∞–∫—Ç–æ—Ä:": input('–í–≤–µ–¥–∏—Ç–µ —Ä–µ–∑—É—Å —Ñ–∞–∫—Ç–æ—Ä(+ –∏–ª–∏ -): '),
        "–ü–æ—Å–ª–µ–¥–Ω—è—è —Å–¥–∞—á–∞ –∫—Ä–æ–≤–∏:": input('–í–≤–µ–¥–∏—Ç–µ –∫–æ–ª. –¥–Ω–µ–π —Å –ø–æ—Å–ª–µ–¥–Ω–µ–π —Å–¥–∞—á–∏ –∫—Ä–æ–≤–∏(–µ—Å–ª–∏ –≤–ø–µ—Ä–≤—ã–µ —Å–¥–∞—ë—Ç–µ, –ø–æ—Å—Ç–∞–≤—å—Ç–µ -1): ')
    }
    chelovek['–û–≥—Ä–∞–Ω–∏—á–µ–Ω–∏—è:'] = []
    for i in range(1,len(ogranichen)):
        print(f'üçû {i} {ogranichen[i]}')
    otvet = input('–í–≤–µ–¥–∏—Ç–µ –Ω–æ–º–µ—Ä–∞ –æ–≥—Ä–∞–Ω–∏—á–µ–Ω–∏–π —á–µ—Ä–µ–∑ –ø—Ä–æ–±–µ–ª, –∫–æ—Ç–æ—Ä—ã–µ —É –≤–∞—Å –ø—Ä–∏—Å—É—Å—Ç–≤—É—é—Ç(–µ—Å–ª–∏ –æ–≥—Ä–∞–Ω–∏—á–µ–Ω–∏–π –Ω–µ—Ç, –≤–≤–µ–¥–∏–µ 0.): ').split()
    for i in otvet:
        chelovek['–û–≥—Ä–∞–Ω–∏—á–µ–Ω–∏—è:'].append(ogranichen[int(i)])
    raspred(chelovek)

def sufics(age):
    if age % 10 >= 5 or age % 10 == 0 or 10<age%100<15:
        return str(age)+' –ª–µ—Ç'
    elif age%10>1:#–ø—Ä–æ–ø–∏—à–µ–º —É—Å–ª–æ–≤–∏–µ –¥–ª—è "–≥–æ–¥–∞"
        return str(age)+' –≥–æ–¥–∞'
    else:
        return str(age)+' –≥–æ–¥'

def outinfo(spisok):
    for i,j in spisok.items(): # (1, '–§–ò:': '–ú–∏—à–∏–Ω –ò–≥–æ—Ä—å', '–í–æ–∑—Ä–∞—Å—Ç:': 32, ...)
        print(f'id{i}. ', end='')
        for key,value in j.items():
            if key == '–í–æ–∑—Ä–∞—Å—Ç:':
                print(f'{key} {sufics(value)}',end='; ')
            elif key == '–ü–æ—Å–ª–µ–¥–Ω—è—è —Å–¥–∞—á–∞ –∫—Ä–æ–≤–∏:' and value == "-1":
                print(f'{key} –ù–µ —Å–¥–∞–≤–∞–ª –∫—Ä–æ–≤—å',end='; ')
            else:
                print(f'{key} {value}',end='; ')
        print() # id1. –§–ò: –ú–∏—à–∏–Ω –ò–≥–æ—Ä—å; –í–æ–∑—Ä–∞—Å—Ç: 32 –≥–æ–¥–∞; ...

def raspred(chelovek):
    global reglist, blacklist, ogranichen
    flag = True
    for i in chelovek['–û–≥—Ä–∞–Ω–∏—á–µ–Ω–∏—è:']:
        if i in ogranichen[1:]:
            flag = False
            break
    if chelovek['–í–æ–∑—Ä–∞—Å—Ç:']>65 or chelovek['–í–æ–∑—Ä–∞—Å—Ç:']<12 or flag == False:
        blacklist[len(blacklist.keys())+1] = chelovek
    else:
        reglist[len(reglist.keys())+1] = chelovek

def application(name):
    flagreg = False
    for key,value in reglist.items():
        if name in value.values():
            flagreg = True
            if int(value['–ü–æ—Å–ª–µ–¥–Ω—è—è —Å–¥–∞—á–∞ –∫—Ä–æ–≤–∏:']) > 30 or int(value['–ü–æ—Å–ª–µ–¥–Ω—è—è —Å–¥–∞—á–∞ –∫—Ä–æ–≤–∏:']) < 0:
                print('–í—ã –º–æ–∂–µ—Ç–µ —Å–¥–∞—Ç—å –∫—Ä–æ–≤—å –∏ –≤–∑—è—Ç—å —Ö–ª–µ–±–∞ —Å –º—è—Å–æ–º üçî')
            else:
                print('–í—ã —É–∂–µ —Å–¥–∞–≤–∞–ª–∏ –∫—Ä–æ–≤—å, —Å–ø–∞—Å–∏–±–æ –í–∞–º, –Ω–æ –Ω—É–∂–Ω–æ –µ—â—ë –ø–æ–¥–æ–∂–¥–∞—Ç—å. üçÆ‚õîÔ∏è')
            break
    else:
        for key,value in blacklist.items():
            if name in value.values():
                flagreg = True
                print('–í—ã –Ω–µ –º–æ–∂–µ—Ç–µ —Å–¥–∞—Ç—å –∫—Ä–æ–≤—å –∏–∑ –∑–∞ –æ–≥—Ä–∞–Ω–∏—á–µ–Ω–∏–π üçÆ‚õîÔ∏è')
                break
    if flagreg == False:
        print('–í–∞–º –Ω–µ–æ–±—Ö–æ–¥–∏–º–æ –∑–∞—Ä–µ–≥–∏—Å—Ç—Ä–∏—Ä–æ–≤–∞—Ç—å—Å—è –∏ –≤–∑—è—Ç—å ‚òïÔ∏è')

def edit(name):
    flagreg = False
    for key,value in reglist.items():
        if name in value.values():
            flagreg = True
            index = key
            mylist = reglist
            break
    else:
        for key,value in blacklist.items():
            if name in value.values():
                flagreg = True
                index = key
                mylist = blacklist
                break
    if flagreg == False:
        print('–í–∞–º –Ω–µ–æ–±—Ö–æ–¥–∏–º–æ –∑–∞—Ä–µ–≥–∏—Å—Ç—Ä–∏—Ä–æ–≤–∞—Ç—å—Å—è –∏ –≤–∑—è—Ç—å ‚òïÔ∏è')
    else:
        print(f'–ú—ã –Ω–∞—à–ª–∏ –∞–Ω–∫–µ—Ç—É: {mylist[index]}')
        zapros = input('–í–≤–µ–¥–∏—Ç–µ –ø—É–Ω–∫—Ç –¥–ª—è –∏–∑–º–µ–Ω–µ–Ω–∏–π: ')
        mylist[index][zapros+':'] = input('–í–≤–µ–¥–∏—Ç–µ –¥–∞–Ω–Ω—ã–µ –¥–ª—è –æ–±–Ω–æ–≤–ª–µ–Ω–∏—è: ')
def outnameinfo(name):
    flagreg = False
    for key,value in reglist.items():
        if name in value.values():
            flagreg = True
            index = key
            mylist = reglist
            break
    else:
        for key,value in blacklist.items():
            if name in value.values():
                flagreg = True
                index = key
                mylist = blacklist
                break
    if flagreg == False:
        print('–¢–∞–∫–æ–π –∞–Ω–∫–µ—Ç—ã –Ω–µ—Ç üò¢')
    else:
        print(f'–ú—ã –Ω–∞—à–ª–∏ –∞–Ω–∫–µ—Ç—É: {mylist[index]}')
        
while True:
    inzapros()
    zapros = input('–í–≤–µ–¥–∏—Ç–µ –ø–æ–¥—Ö–æ–¥—è—â–∏–π –Ω–æ–º–µ—Ä: ')
    if zapros == "0":
        break
    elif zapros == "1":
        reg()
    elif zapros == '2':
        application(input('–í–≤–µ–¥–∏—Ç–µ –§–ò: '))
    elif zapros == '3':
        print(*ogranichen[1:])
    elif zapros == "4":
        print('–õ–∏—Å—Ç —Ç–µ—Ö –∫—Ç–æ –º–æ–∂–µ—Ç —Å–¥–∞–≤–∞—Ç—å: ')
        outinfo(reglist)
        print('Blacklist: ')
        outinfo(blacklist)
    elif zapros == "5":
        outnameinfo(input('–í–≤–µ–¥–∏—Ç–µ –§–ò: '))
    elif zapros == '6':
        edit(input('–í–≤–µ–¥–∏—Ç–µ –§–ò: '))







